{"version":3,"sources":["serviceWorker.js","Markdown.js","Blog.js","index.js","blog-post.1.md","blog-post.2.md","blog-post.3.md"],"names":["Boolean","window","location","hostname","match","options","overrides","h1","component","props","react_default","a","createElement","Typography_default","Object","assign","gutterBottom","variant","h2","h3","h4","paragraph","p","li","withStyles","theme","listItem","marginTop","spacing","unit","_ref","classes","objectWithoutProperties","className","Markdown","esm","sections","featuredPosts","title","date","description","posts","post1","post2","post3","archives","social","layout","defineProperty","width","marginLeft","marginRight","breakpoints","up","toolbarMain","borderBottom","concat","palette","grey","toolbarTitle","flex","toolbarSecondary","justifyContent","mainFeaturedPost","backgroundColor","color","common","white","marginBottom","mainFeaturedPostContent","padding","paddingRight","mainGrid","card","display","cardDetails","cardMedia","markdown","sidebarAboutBox","sidebarSection","footer","background","paper","Fragment","CssBaseline_default","Toolbar_default","Button_default","size","align","noWrap","IconButton_default","Search_default","map","section","key","Paper_default","Grid_default","container","item","md","cardGrid","post","xs","Card_default","CardContent_default","Hidden_default","xsDown","CardMedia_default","image","Divider_default","src_Markdown","substring","elevation","archive","network","ReactDOM","render","src_Blog","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__"],"mappings":"4IAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2TCPAC,EAAU,CACdC,UAAW,CACTC,GAAI,CAAEC,UAAW,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYC,cAAY,EAACC,QAAQ,MAASR,MACpES,GAAI,CAAEV,UAAW,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYC,cAAY,EAACC,QAAQ,MAASR,MACpEU,GAAI,CAAEX,UAAW,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYC,cAAY,EAACC,QAAQ,aAAgBR,MAC3EW,GAAI,CAAEZ,UAAW,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYC,cAAY,EAACC,QAAQ,UAAUI,WAAS,GAAKZ,MACnFa,EAAG,CAAEd,UAAW,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYM,WAAS,GAAKZ,MACnDc,GAAI,CACFf,UAAWgB,qBAdF,SAAAC,GAAK,MAAK,CACvBC,SAAU,CACRC,UAAWF,EAAMG,QAAQC,QAYZL,CAAmB,SAAAM,GAAA,IAAGC,EAAHD,EAAGC,QAAYtB,EAAfK,OAAAkB,EAAA,EAAAlB,CAAAgB,EAAA,oBAC5BpB,EAAAC,EAAAC,cAAA,MAAIqB,UAAWF,EAAQL,UACrBhB,EAAAC,EAAAC,cAACC,EAAAF,EAADG,OAAAC,OAAA,CAAYP,UAAU,QAAWC,UAW5ByB,MAJf,SAAkBzB,GAChB,OAAOC,EAAAC,EAAAC,cAACuB,EAAA,EAADrB,OAAAC,OAAA,CAAeV,QAASA,GAAaI,wDCoDxC2B,EAAW,CACf,aACA,SACA,UACA,WACA,WACA,UACA,UACA,SACA,QACA,UAGIC,EAAgB,CACpB,CACEC,MAAO,gBACPC,KAAM,SACNC,YACE,+FAEJ,CACEF,MAAO,aACPC,KAAM,SACNC,YACE,gGAIAC,EAAQ,CAACC,IAAOC,IAAOC,KAEvBC,EAAW,CACf,aACA,gBACA,eACA,gBACA,gBACA,eACA,iBACA,cACA,YACA,YACA,WACA,cAGIC,EAAS,CAAC,SAAU,UAAW,YAkJtBtB,2BA3PA,SAAAC,GAAK,MAAK,CACvBsB,OAAOjC,OAAAkC,EAAA,EAAAlC,CAAA,CACLmC,MAAO,OACPC,WAAiC,EAArBzB,EAAMG,QAAQC,KAC1BsB,YAAkC,EAArB1B,EAAMG,QAAQC,MAC1BJ,EAAM2B,YAAYC,GAAG,KAA4B,EAArB5B,EAAMG,QAAQC,KAAW,GAAK,CACzDoB,MAAO,KACPC,WAAY,OACZC,YAAa,SAGjBG,YAAa,CACXC,aAAY,aAAAC,OAAe/B,EAAMgC,QAAQC,KAAK,OAEhDC,aAAc,CACZC,KAAM,GAERC,iBAAkB,CAChBC,eAAgB,iBAElBC,iBAAkB,CAChBC,gBAAiBvC,EAAMgC,QAAQC,KAAK,KACpCO,MAAOxC,EAAMgC,QAAQS,OAAOC,MAC5BC,aAAmC,EAArB3C,EAAMG,QAAQC,MAE9BwC,wBAAwBvD,OAAAkC,EAAA,EAAAlC,CAAA,CACtBwD,QAAO,GAAAd,OAA0B,EAArB/B,EAAMG,QAAQC,KAAnB,OACNJ,EAAM2B,YAAYC,GAAG,MAAQ,CAC5BkB,aAAc,IAGlBC,SAAU,CACR7C,UAAgC,EAArBF,EAAMG,QAAQC,MAE3B4C,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXf,KAAM,GAERgB,UAAW,CACT3B,MAAO,KAET4B,SAAU,CACRP,QAAO,GAAAd,OAA0B,EAArB/B,EAAMG,QAAQC,KAAnB,SAETiD,gBAAiB,CACfR,QAA8B,EAArB7C,EAAMG,QAAQC,KACvBmC,gBAAiBvC,EAAMgC,QAAQC,KAAK,MAEtCqB,eAAgB,CACdpD,UAAgC,EAArBF,EAAMG,QAAQC,MAE3BmD,OAAQ,CACNhB,gBAAiBvC,EAAMgC,QAAQwB,WAAWC,MAC1CvD,UAAgC,EAArBF,EAAMG,QAAQC,KACzByC,QAAO,GAAAd,OAA0B,EAArB/B,EAAMG,QAAQC,KAAnB,WAmMIL,CAhJf,SAAcf,GAAO,IACXsB,EAAYtB,EAAZsB,QAER,OACErB,EAAAC,EAAAC,cAACF,EAAAC,EAAMwE,SAAP,KACEzE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,MACAD,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQgB,QACtBrC,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAASsB,UAAWF,EAAQuB,aAC1B5C,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAQ4E,KAAK,SAAb,aACA7E,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEH,UAAU,KACVS,QAAQ,KACRgD,MAAM,UACNuB,MAAM,SACNC,QAAM,EACNxD,UAAWF,EAAQ4B,cANrB,QAUAjD,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,KACED,EAAAC,EAAAC,cAAC+E,EAAAhF,EAAD,OAEFD,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAQM,QAAQ,WAAWsE,KAAK,SAAhC,YAIF7E,EAAAC,EAAAC,cAACyE,EAAA1E,EAAD,CAASM,QAAQ,QAAQgB,UAAWF,EAAQ8B,kBACzCzB,EAASwD,IAAI,SAAAC,GAAO,OACnBnF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYsD,MAAM,UAAUwB,QAAM,EAACK,IAAKD,GACrCA,MAIPnF,EAAAC,EAAAC,cAAA,YAEEF,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CAAOsB,UAAWF,EAAQgC,kBACxBrD,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMsF,WAAS,GACbvF,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMuF,MAAI,EAACC,GAAI,GACbzF,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQsC,yBACtB3D,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYH,UAAU,KAAKS,QAAQ,KAAKgD,MAAM,UAAUjD,cAAY,GAApE,wCAGAN,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKgD,MAAM,UAAU5C,WAAS,GAAlD,kKAURX,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMsF,WAAS,EAACrE,QAAS,GAAIK,UAAWF,EAAQqE,UAC7C/D,EAAcuD,IAAI,SAAAS,GAAI,OACrB3F,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMuF,MAAI,EAACJ,IAAKO,EAAK/D,MAAOgE,GAAI,GAAIH,GAAI,GACtCzF,EAAAC,EAAAC,cAAC2F,EAAA5F,EAAD,CAAMsB,UAAWF,EAAQ0C,MACvB/D,EAAAC,EAAAC,cAAA,OAAKqB,UAAWF,EAAQ4C,aACtBjE,EAAAC,EAAAC,cAAC4F,EAAA7F,EAAD,KACED,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYH,UAAU,KAAKS,QAAQ,MAChCoF,EAAK/D,OAER5B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,YAAYgD,MAAM,iBACnCoC,EAAK9D,MAER7B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,YAAYI,WAAS,GACtCgF,EAAK7D,aAER9B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,YAAYgD,MAAM,WAAtC,yBAKJvD,EAAAC,EAAAC,cAAC6F,EAAA9F,EAAD,CAAQ+F,QAAM,GACZhG,EAAAC,EAAAC,cAAC+F,EAAAhG,EAAD,CACEsB,UAAWF,EAAQ6C,UACnBgC,MAAM,8sBACNtE,MAAM,sBAQlB5B,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMsF,WAAS,EAACrE,QAAS,GAAIK,UAAWF,EAAQyC,UAE9C9D,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMuF,MAAI,EAACI,GAAI,GAAIH,GAAI,GACrBzF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKD,cAAY,GAArC,qBAGAN,EAAAC,EAAAC,cAACiG,EAAAlG,EAAD,MACC8B,EAAMmD,IAAI,SAAAS,GAAI,OACb3F,EAAAC,EAAAC,cAACkG,EAAD,CAAU7E,UAAWF,EAAQ8C,SAAUiB,IAAKO,EAAKU,UAAU,EAAG,KAC3DV,MAMP3F,EAAAC,EAAAC,cAACoF,EAAArF,EAAD,CAAMuF,MAAI,EAACI,GAAI,GAAIH,GAAI,GACrBzF,EAAAC,EAAAC,cAACmF,EAAApF,EAAD,CAAOqG,UAAW,EAAG/E,UAAWF,EAAQ+C,iBACtCpE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKD,cAAY,GAArC,SAGAN,EAAAC,EAAAC,cAACC,EAAAF,EAAD,0JAKFD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKD,cAAY,EAACiB,UAAWF,EAAQgD,gBAAzD,YAGClC,EAAS+C,IAAI,SAAAqB,GAAO,OACnBvG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYmF,IAAKmB,GAAUA,KAE7BvG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKD,cAAY,EAACiB,UAAWF,EAAQgD,gBAAzD,UAGCjC,EAAO8C,IAAI,SAAAsB,GAAO,OACjBxG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYmF,IAAKoB,GAAUA,SAQrCxG,EAAAC,EAAAC,cAAA,UAAQqB,UAAWF,EAAQiD,QACzBtE,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,KAAKuE,MAAM,SAASxE,cAAY,GAApD,UAGAN,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAYM,QAAQ,YAAYuE,MAAM,SAASvB,MAAM,gBAAgBzD,UAAU,KAA/E,oDC3PR2G,IAASC,OAAO1G,EAAAC,EAAAC,cAACyG,EAAD,MAAUC,SAASC,eAAe,SHyH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCInInBC,EAAAC,QAAiBC,EAAA1G,EAAuB,2DCAxCwG,EAAAC,QAAiBC,EAAA1G,EAAuB,2DCAxCwG,EAAAC,QAAiBC,EAAA1G,EAAuB","file":"static/js/main.56e1931d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  listItem: {\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nconst options = {\r\n  overrides: {\r\n    h1: { component: props => <Typography gutterBottom variant=\"h4\" {...props} /> },\r\n    h2: { component: props => <Typography gutterBottom variant=\"h6\" {...props} /> },\r\n    h3: { component: props => <Typography gutterBottom variant=\"subtitle1\" {...props} /> },\r\n    h4: { component: props => <Typography gutterBottom variant=\"caption\" paragraph {...props} /> },\r\n    p: { component: props => <Typography paragraph {...props} /> },\r\n    li: {\r\n      component: withStyles(styles)(({ classes, ...props }) => (\r\n        <li className={classes.listItem}>\r\n          <Typography component=\"span\" {...props} />\r\n        </li>\r\n      )),\r\n    },\r\n  },\r\n};\r\n\r\nfunction Markdown(props) {\r\n  return <ReactMarkdown options={options} {...props} />;\r\n}\r\n\r\nexport default Markdown;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Markdown from './Markdown';\r\nimport post1 from './blog-post.1.md';\r\nimport post2 from './blog-post.2.md';\r\nimport post3 from './blog-post.3.md';\r\n\r\nconst styles = theme => ({\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 1100,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  toolbarMain: {\r\n    borderBottom: `1px solid ${theme.palette.grey[300]}`,\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1,\r\n  },\r\n  toolbarSecondary: {\r\n    justifyContent: 'space-between',\r\n  },\r\n  mainFeaturedPost: {\r\n    backgroundColor: theme.palette.grey[800],\r\n    color: theme.palette.common.white,\r\n    marginBottom: theme.spacing.unit * 4,\r\n  },\r\n  mainFeaturedPostContent: {\r\n    padding: `${theme.spacing.unit * 6}px`,\r\n    [theme.breakpoints.up('md')]: {\r\n      paddingRight: 0,\r\n    },\r\n  },\r\n  mainGrid: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n  },\r\n  cardDetails: {\r\n    flex: 1,\r\n  },\r\n  cardMedia: {\r\n    width: 160,\r\n  },\r\n  markdown: {\r\n    padding: `${theme.spacing.unit * 3}px 0`,\r\n  },\r\n  sidebarAboutBox: {\r\n    padding: theme.spacing.unit * 2,\r\n    backgroundColor: theme.palette.grey[200],\r\n  },\r\n  sidebarSection: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: theme.spacing.unit * 8,\r\n    padding: `${theme.spacing.unit * 6}px 0`,\r\n  },\r\n});\r\n\r\nconst sections = [\r\n  'Technology',\r\n  'Design',\r\n  'Culture',\r\n  'Business',\r\n  'Politics',\r\n  'Opinion',\r\n  'Science',\r\n  'Health',\r\n  'Style',\r\n  'Travel',\r\n];\r\n\r\nconst featuredPosts = [\r\n  {\r\n    title: 'Featured post',\r\n    date: 'Nov 12',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n  },\r\n  {\r\n    title: 'Post title',\r\n    date: 'Nov 11',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n  },\r\n];\r\n\r\nconst posts = [post1, post2, post3];\r\n\r\nconst archives = [\r\n  'March 2020',\r\n  'February 2020',\r\n  'January 2020',\r\n  'December 2019',\r\n  'November 2019',\r\n  'October 2019',\r\n  'September 2019',\r\n  'August 2019',\r\n  'July 2019',\r\n  'June 2019',\r\n  'May 2019',\r\n  'April 2019',\r\n];\r\n\r\nconst social = ['GitHub', 'Twitter', 'Facebook'];\r\n\r\nfunction Blog(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <div className={classes.layout}>\r\n        <Toolbar className={classes.toolbarMain}>\r\n          <Button size=\"small\">Subscribe</Button>\r\n          <Typography\r\n            component=\"h2\"\r\n            variant=\"h5\"\r\n            color=\"inherit\"\r\n            align=\"center\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            Blog\r\n          </Typography>\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <Button variant=\"outlined\" size=\"small\">\r\n            Sign up\r\n          </Button>\r\n        </Toolbar>\r\n        <Toolbar variant=\"dense\" className={classes.toolbarSecondary}>\r\n          {sections.map(section => (\r\n            <Typography color=\"inherit\" noWrap key={section}>\r\n              {section}\r\n            </Typography>\r\n          ))}\r\n        </Toolbar>\r\n        <main>\r\n          {/* Main featured post */}\r\n          <Paper className={classes.mainFeaturedPost}>\r\n            <Grid container>\r\n              <Grid item md={6}>\r\n                <div className={classes.mainFeaturedPostContent}>\r\n                  <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n                    Title of a longer featured blog post\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" color=\"inherit\" paragraph>\r\n                    Multiple lines of text that form the lede, informing new readers quickly and\r\n                    efficiently about what&apos;s most interesting in this post&apos;s contents��\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n          {/* End main featured post */}\r\n          {/* Sub featured posts */}\r\n          <Grid container spacing={40} className={classes.cardGrid}>\r\n            {featuredPosts.map(post => (\r\n              <Grid item key={post.title} xs={12} md={6}>\r\n                <Card className={classes.card}>\r\n                  <div className={classes.cardDetails}>\r\n                    <CardContent>\r\n                      <Typography component=\"h2\" variant=\"h5\">\r\n                        {post.title}\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                        {post.date}\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" paragraph>\r\n                        {post.description}\r\n                      </Typography>\r\n                      <Typography variant=\"subtitle1\" color=\"primary\">\r\n                        Continue reading...\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </div>\r\n                  <Hidden xsDown>\r\n                    <CardMedia\r\n                      className={classes.cardMedia}\r\n                      image=\"data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22288%22%20height%3D%22225%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20288%20225%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_164edaf95ee%20text%20%7B%20fill%3A%23eceeef%3Bfont-weight%3Abold%3Bfont-family%3AArial%2C%20Helvetica%2C%20Open%20Sans%2C%20sans-serif%2C%20monospace%3Bfont-size%3A14pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_164edaf95ee%22%3E%3Crect%20width%3D%22288%22%20height%3D%22225%22%20fill%3D%22%2355595c%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%2296.32500076293945%22%20y%3D%22118.8%22%3EThumbnail%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\" // eslint-disable-line max-len\r\n                      title=\"Image title\"\r\n                    />\r\n                  </Hidden>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          {/* End sub featured posts */}\r\n          <Grid container spacing={40} className={classes.mainGrid}>\r\n            {/* Main content */}\r\n            <Grid item xs={12} md={8}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                From the Firehose\r\n              </Typography>\r\n              <Divider />\r\n              {posts.map(post => (\r\n                <Markdown className={classes.markdown} key={post.substring(0, 40)}>\r\n                  {post}\r\n                </Markdown>\r\n              ))}\r\n            </Grid>\r\n            {/* End main content */}\r\n            {/* Sidebar */}\r\n            <Grid item xs={12} md={4}>\r\n              <Paper elevation={0} className={classes.sidebarAboutBox}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  About\r\n                </Typography>\r\n                <Typography>\r\n                  Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit\r\n                  amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\r\n                </Typography>\r\n              </Paper>\r\n              <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n                Archives\r\n              </Typography>\r\n              {archives.map(archive => (\r\n                <Typography key={archive}>{archive}</Typography>\r\n              ))}\r\n              <Typography variant=\"h6\" gutterBottom className={classes.sidebarSection}>\r\n                Social\r\n              </Typography>\r\n              {social.map(network => (\r\n                <Typography key={network}>{network}</Typography>\r\n              ))}\r\n            </Grid>\r\n            {/* End sidebar */}\r\n          </Grid>\r\n        </main>\r\n      </div>\r\n      {/* Footer */}\r\n      <footer className={classes.footer}>\r\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          Something here to give the footer a purpose!\r\n        </Typography>\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nBlog.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Blog);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Blog from './Blog';\n\n//ReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Blog />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/blog-post.1.9450ed62.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.2.47a68ff8.md\";","module.exports = __webpack_public_path__ + \"static/media/blog-post.3.ee3cf132.md\";"],"sourceRoot":""}